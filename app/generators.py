import os
from dotenv import load_dotenv
from openai import AsyncOpenAI

# Загружаем переменные окружения
load_dotenv()
client = AsyncOpenAI(api_key=os.getenv('AI_TOKEN'))  # Создаем клиента

# Чтение содержимого файла
with open("all.txt", "r", encoding="utf-8") as f:
    file_content = f.read()

async def gpt(prompt):
    response = await client.chat.completions.create(
        messages=[
            {
                "role": "system",
                "content": (
                    f"Ты ассистент косметологии 'BuntClinic'. Твоя задача — консультировать потенциального клиента в выборе усулги и информировать о текущих акциях"
                    f"Используй информацию из файла: {file_content}"
                    f"Отвечай структурированно и по пунктам, используя отступы (нумерацию где надо), но не применяй жирный, курсив, заголовки или любые специальные символы для выделения текста. Оформляй ответ в виде простого текста, разделяя блоки информации логично и эстетично, чтобы текст выглядел чисто и читался легко"
                    f"Не используй в ответе такие символы как ** и # (обозначение жирности, курсива и заголовка)"
                    f"Не упоминай цены, если клиент справшивает о стоимости - вышли стоимость запрашиваемых услуг. Старайся продать и граммотно посоветовать услугу"
                    f"Не здоровайся с клиентами"
                    f"Не"
                    f"Отвечай пользователю на том же языке, на котором он к тебе обратился"
                    f"Если спросят как связаться, ссылайся на кнопку ниже, у тебя под каждым сообщением кнопка 'связаться', которая ведет в чат с клиникой"
                )
            },
            {
                "role": "user",
                "content": prompt
            }
        ],
        model="gpt-4o-mini"
    )
    return response

